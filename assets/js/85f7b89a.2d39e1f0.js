"use strict";(self.webpackChunktypegoose_website=self.webpackChunktypegoose_website||[]).push([[7563],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=l(n),m=s,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3480:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var o=n(2122),s=n(9756),r=(n(7294),n(3905)),i=["components"],a={id:"known-issues",title:"Known Issues"},p=void 0,l={unversionedId:"guides/known-issues",id:"guides/known-issues",isDocsHomePage:!1,title:"Known Issues",description:"Known Issues",source:"@site/../docs/guides/known-issues.md",sourceDirName:"guides",slug:"/guides/known-issues",permalink:"/typegoose/docs/guides/known-issues",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/known-issues.md",version:"current",frontMatter:{id:"known-issues",title:"Known Issues"},sidebar:"guides",previous:{title:"FAQ",permalink:"/typegoose/docs/guides/faq"},next:{title:"Deprecation Codes",permalink:"/typegoose/docs/guides/deprecation-codes"}},c=[{value:"Known Issues",id:"known-issues",children:[{value:"transpile-only",id:"transpile-only",children:[]},{value:"tsconfig-paths",id:"tsconfig-paths",children:[]},{value:"Self-Containing classes",id:"self-containing-classes",children:[]},{value:"Babel",id:"babel",children:[]},{value:"prop on get &amp; set",id:"prop-on-get--set",children:[]}]},{value:"Known Mongoose incompatibilities",id:"known-mongoose-incompatibilities",children:[{value:"typePojoToMixed",id:"typepojotomixed",children:[]}]}],u={toc:c};function d(e){var t=e.components,n=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"known-issues"},"Known Issues"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Automattic/mongoose/issues?utf8=%E2%9C%93&q=is%3Aissue+involves%3Ahasezoey"},"Please look here first, to decide if it is a Typegoose or a Mongoose issue.")),(0,r.kt)("h3",{id:"transpile-only"},"transpile-only"),(0,r.kt)("p",null,"Never run ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-node --transpile-only")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"tsc --transpile-only"),", otherwise sometimes types are missing completly or are the wrong type."),(0,r.kt)("h3",{id:"tsconfig-paths"},"tsconfig-paths"),(0,r.kt)("p",null,"TypeScript provides the option to alias paths (with ",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig-paths"),"), but is somehow incompatible with Typegoose, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/szokodiakos/typegoose/issues/392"},"more info in here")),(0,r.kt)("h3",{id:"self-containing-classes"},"Self-Containing classes"),(0,r.kt)("p",null,"It is currently not possible to use a self-containing class (sub-documents)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'class SomeClass {\n  @prop()\n  public ref: SomeClass; // ERROR "Maximum Class Stack Size Exceeded"\n}\n')),(0,r.kt)("p",null,"For References, this will work"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class SomeClass {\n  @prop({ ref: () => SomeClass }) // or hardcode the string\n  public ref: Ref<SomeClass>;\n}\n")),(0,r.kt)("h3",{id:"babel"},"Babel"),(0,r.kt)("p",null,"Using babel as a TypeScript compiler is known to cause problems (like incorrect types)",(0,r.kt)("br",{parentName:"p"}),"\n","We recommened you use ",(0,r.kt)("inlineCode",{parentName:"p"},"tsc")," directly, or ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-node")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-jest")," for jest-testing"),(0,r.kt)("p",null,"If Babel is still needed, then read ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-preset-typescript"},"Babel TypeScript preset")," and install the following plugins:\nyou will need to reproduce the ",(0,r.kt)("inlineCode",{parentName:"p"},"--experimentalDecorators")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"--emitDecoratorMetadata")," ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-transform-typescript#typescript-compiler-options"},"TypeScript compiler options")," by using the corresponding plugins for ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-proposal-decorators"},"enabling decorators")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/leonardfactory/babel-plugin-transform-typescript-metadata"},"emitting decorator metadata"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  plugins: [\n    ['@babel/plugin-proposal-decorators', { legacy: true }],\n    'babel-plugin-transform-typescript-metadata',\n  ]\n}\n")),(0,r.kt)("h3",{id:"prop-on-get--set"},"prop on get & set"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@prop")," cannot be applied to ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," & ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," (ES6), because virtuals do not accept options & schema.loadClass wouldn't load these."),(0,r.kt)("h2",{id:"known-mongoose-incompatibilities"},"Known Mongoose incompatibilities"),(0,r.kt)("h3",{id:"typepojotomixed"},"typePojoToMixed"),(0,r.kt)("p",null,"This option will ",(0,r.kt)("strong",{parentName:"p"},"NOT")," work, because there is no neat / simple way of defining such a thing in the same class."),(0,r.kt)("p",null,"Workaround:",(0,r.kt)("br",{parentName:"p"}),"\n","Create multiple classes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class Sub {\n  @prop()\n  public name: string;\n}\n\nclass Parent {\n  @prop()\n  public subDoc: Sub;\n}\n")))}d.isMDXComponent=!0}}]);