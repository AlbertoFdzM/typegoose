(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{106:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(3),i=n(7),s=(n(0),n(133)),a={id:"quick-start-guide",title:"Quick Start Guide"},r={unversionedId:"guides/quick-start-guide",id:"guides/quick-start-guide",isDocsHomePage:!1,title:"Quick Start Guide",description:"Quick Overview of Typegoose",source:"@site/../docs/guides/quick-start-guide.md",slug:"/guides/quick-start-guide",permalink:"/typegoose/docs/guides/quick-start-guide",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/guides/quick-start-guide.md",version:"current",sidebar:"guides",next:{title:"FAQ",permalink:"/typegoose/docs/guides/faq"}},c=[{value:"Quick Overview of Typegoose",id:"quick-overview-of-typegoose",children:[]},{value:"How to Start using it",id:"how-to-start-using-it",children:[{value:"Requirements",id:"requirements",children:[]},{value:"Install",id:"install",children:[]},{value:"How to use Typegoose",id:"how-to-use-typegoose",children:[]}]},{value:"Do&#39;s and Don&#39;ts of Typegoose",id:"dos-and-donts-of-typegoose",children:[]},{value:"Extra Examples",id:"extra-examples",children:[{value:"Static Methods",id:"static-methods",children:[]},{value:"Instance Methods",id:"instance-methods",children:[]},{value:"Hooks",id:"hooks",children:[]}]}],l={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"quick-overview-of-typegoose"},"Quick Overview of Typegoose"),Object(s.b)("p",null,'Typegoose is a "wrapper" for easily writing Mongoose models with TypeScript.'),Object(s.b)("p",null,"Instead of writing this:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"// This is an representation of how typegoose's compile output would look like\ninterface Car {\n  model?: string;\n}\n\ninterface Job {\n  title?: string;\n  position?: string;\n}\n\ninterface User {\n  name?: string;\n  age!: number;\n  preferences?: string[];\n  mainJob?: Job;\n  jobs?: Job[];\n  mainCar?: Car | string;\n  cars?: (Car | string)[];\n}\n\nconst JobSchema = new mongoose.Schema({\n  title: String;\n  position: String;\n});\n\nconst CarModel = mongoose.model('Car', {\n  model: string,\n});\n\nconst UserModel = mongoose.model('User', {\n  name: { type: String },\n  age: { type: Number, required: true },\n  preferences: [{ type: String }],\n  mainJob: { type: JobSchema },\n  jobs: [{ type: JobSchema }],\n  mainCar: { type: Schema.Types.ObjectId, ref: 'Car' },\n  cars: [{ type: Schema.Types.ObjectId, ref: 'Car' }],\n});\n")),Object(s.b)("p",null,"You can just write this:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"class Job {\n  @prop()\n  public title?: string;\n\n  @prop()\n  public position?: string;\n}\n\nclass Car {\n  @prop()\n  public model?: string;\n}\n\nclass User {\n  @prop()\n  public name?: string;\n\n  @prop({ required: true })\n  public age!: number; // This is an single Primitive\n\n  @prop({ type: () => [String] })\n  public preferences?: string[]; // This is an Primitive Array\n\n  @prop()\n  public mainJob?: Job; // This is an single SubDocument\n\n  @prop({ type: () => Job })\n  public jobs?: Job[]; // This is an SubDocument Array\n\n  @prop({ ref: () => Car })\n  public mainCar?: Ref<Car>; // This is an single Reference\n\n  @prop({ ref: () => Car })\n  public cars?: Ref<Car>[]; // This is an Reference Array\n}\n")),Object(s.b)("h2",{id:"how-to-start-using-it"},"How to Start using it"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Please note that this guide is for Typegoose 7.4+")),Object(s.b)("h3",{id:"requirements"},"Requirements"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"TypeScript ",Object(s.b)("inlineCode",{parentName:"li"},"^3.9")," (since 7.1)"),Object(s.b)("li",{parentName:"ul"},"NodeJS ",Object(s.b)("inlineCode",{parentName:"li"},"^10.15.0")),Object(s.b)("li",{parentName:"ul"},"Mongoose ",Object(s.b)("inlineCode",{parentName:"li"},"5.10.18")," (",Object(s.b)("a",Object(o.a)({parentName:"li"},{href:"/typegoose/docs/guides/faq#why-is-74x-constrained-to-mongoose-51018"}),"look here for why this version"),")"),Object(s.b)("li",{parentName:"ul"},"An IDE that supports TypeScript linting (VSCode is recommended)"),Object(s.b)("li",{parentName:"ul"},"This Guide expects you to know how Mongoose (or at least its models) works"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"experimentalDecorators")," and ",Object(s.b)("inlineCode",{parentName:"li"},"emitDecoratorMetadata")," must be enabled in ",Object(s.b)("inlineCode",{parentName:"li"},"tsconfig.json")),Object(s.b)("li",{parentName:"ul"},"tsconfig option ",Object(s.b)("inlineCode",{parentName:"li"},"target")," being ",Object(s.b)("inlineCode",{parentName:"li"},"ES6"))),Object(s.b)("h3",{id:"install"},"Install"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),"npm i -s @typegoose/typegoose # install typegoose itself\n\nnpm i -s mongoose # install peer-dependency mongoose\nnpm i -D @types/mongoose # install all types for mongoose - this is required for typegoose to work in TypeScript\n")),Object(s.b)("h3",{id:"how-to-use-typegoose"},"How to use Typegoose"),Object(s.b)("p",null,"Let's say you have a Mongoose model like this one:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"const kittenSchema = new mongoose.Schema({\n  name: String\n});\n\nconst Kitten = mongoose.model('Kitten', kittenSchema);\n\nlet document = await Kitten.create({ name: 'Kitty' });\n// \"document\" has no types\n")),Object(s.b)("p",null,"With Typegoose, it can be converted to something like:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"class KittenClass {\n  @prop()\n  public name?: string;\n}\n\nconst Kitten = getModelForClass(KittenClass);\n\nlet document = await Kitten.create({ name: 'Kitty' });\n// \"document\" has proper types of KittenClass\n")),Object(s.b)("p",null,"Please note that ",Object(s.b)("inlineCode",{parentName:"p"},"new Kitten({})")," & ",Object(s.b)("inlineCode",{parentName:"p"},"Kitten.create({})")," has no types of KittenClass, because Typegoose doesn't modify functions of Mongoose."),Object(s.b)("h2",{id:"dos-and-donts-of-typegoose"},"Do's and Don'ts of Typegoose"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Typegoose is a wrapper for Mongoose's models"),Object(s.b)("li",{parentName:"ul"},"Typegoose aims to not modify any functions of Mongoose"),Object(s.b)("li",{parentName:"ul"},"Typegoose aims to get Mongoose's models to be stable through type-information"),Object(s.b)("li",{parentName:"ul"},"Typegoose aims to make Mongoose more usable by making the models more type-rich with TypeScript"),Object(s.b)("li",{parentName:"ul"},"Decorated schema configuration classes (like KittenClass above) must use explicit type declarations")),Object(s.b)("h2",{id:"extra-examples"},"Extra Examples"),Object(s.b)("h3",{id:"static-methods"},"Static Methods"),Object(s.b)("p",null,"Sometimes extra functions for model creation or pre-written querys are needed, they can be done as follows:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),'class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  public static async findBySpecies(this: ReturnModelType<typeof KittenClass>, species: string) {\n    return this.find({ species }).exec();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst docs = await KittenModel.findBySpecies("SomeSpecies");\n')),Object(s.b)("p",null,"Note: pre-6.0 static functions needed ",Object(s.b)("inlineCode",{parentName:"p"},"@staticMethod"),", but this is not needed anymore"),Object(s.b)("h3",{id:"instance-methods"},"Instance Methods"),Object(s.b)("p",null,"Sometimes extra functions for manipulating data on an instance is needed, they can be done as follows:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),'class KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n\n  public async setSpeciesAndSave(this: DocumentType<KittenClass>, species: string) {\n    this.species = species;\n    return await this.save();\n  }\n}\nconst KittenModel = getModelForClass(KittenClass);\n\nconst doc = new KittenModel({ name: "SomeCat", species: "SomeSpecies" });\nawait doc.setSpeciesAndSave("SomeOtherSpecies");\n')),Object(s.b)("p",null,"Note: pre-6.0 instance functions needed ",Object(s.b)("inlineCode",{parentName:"p"},"@instanceMethod"),", but this is not needed anymore"),Object(s.b)("h3",{id:"hooks"},"Hooks"),Object(s.b)("p",null,"Typegoose also supports hooks, they can be used like this:"),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-ts"}),"@pre<KittenClass>('save', function() {\n  this.isKitten = this.age < 1\n})\n@post<KittenClass>('save', (kitten) => {\n  console.log(kitten.isKitten ? \"We have a kitten here.\" : \"We have a big kitty here.\")\n})\nclass KittenClass {\n  @prop()\n  public name?: string;\n\n  @prop()\n  public species?: string;\n  \n  @prop()\n  public age?: number\n  \n  @prop({ default: false })\n  public isKitten?: boolean\n\n  public async setSpeciesAndSave(this: DocumentType<KittenClass>, species: string) {\n    this.species = species;\n    return await this.save();\n  }\n}\n")),Object(s.b)("p",null,"For detailed explanation of Hooks, please see ",Object(s.b)("a",Object(o.a)({parentName:"p"},{href:"/typegoose/docs/api/decorators/hooks"}),"Hooks"),"."),Object(s.b)("p",null,"Note:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Do not use Arrow Functions, because it will break the binding of ",Object(s.b)("inlineCode",{parentName:"li"},"this")),Object(s.b)("li",{parentName:"ul"},"For ESLint users: Make sure that rule ",Object(s.b)("inlineCode",{parentName:"li"},"eslint-no-use-before-defining")," is disabled, otherwise you might get ESLint errors / warnings")))}p.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var o=n(0),i=n.n(o);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=o,m=b["".concat(a,".").concat(d)]||b[d]||u[d]||s;return n?i.a.createElement(m,r(r({ref:t},l),{},{components:n})):i.a.createElement(m,r({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:o,a[1]=r;for(var l=2;l<s;l++)a[l]=n[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);